// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.5
// source: snapshot.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type IncrementalSnapshot struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           []byte                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value         []byte                 `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	Operation     int32                  `protobuf:"varint,3,opt,name=operation,proto3" json:"operation,omitempty"`
	Timestamp     int64                  `protobuf:"varint,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IncrementalSnapshot) Reset() {
	*x = IncrementalSnapshot{}
	mi := &file_snapshot_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IncrementalSnapshot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IncrementalSnapshot) ProtoMessage() {}

func (x *IncrementalSnapshot) ProtoReflect() protoreflect.Message {
	mi := &file_snapshot_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IncrementalSnapshot.ProtoReflect.Descriptor instead.
func (*IncrementalSnapshot) Descriptor() ([]byte, []int) {
	return file_snapshot_proto_rawDescGZIP(), []int{0}
}

func (x *IncrementalSnapshot) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *IncrementalSnapshot) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *IncrementalSnapshot) GetOperation() int32 {
	if x != nil {
		return x.Operation
	}
	return 0
}

func (x *IncrementalSnapshot) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

type SnapshotBatch struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Snapshots     []*IncrementalSnapshot `protobuf:"bytes,1,rep,name=snapshots,proto3" json:"snapshots,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SnapshotBatch) Reset() {
	*x = SnapshotBatch{}
	mi := &file_snapshot_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SnapshotBatch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SnapshotBatch) ProtoMessage() {}

func (x *SnapshotBatch) ProtoReflect() protoreflect.Message {
	mi := &file_snapshot_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SnapshotBatch.ProtoReflect.Descriptor instead.
func (*SnapshotBatch) Descriptor() ([]byte, []int) {
	return file_snapshot_proto_rawDescGZIP(), []int{1}
}

func (x *SnapshotBatch) GetSnapshots() []*IncrementalSnapshot {
	if x != nil {
		return x.Snapshots
	}
	return nil
}

var File_snapshot_proto protoreflect.FileDescriptor

const file_snapshot_proto_rawDesc = "" +
	"\n" +
	"\x0esnapshot.proto\"y\n" +
	"\x13IncrementalSnapshot\x12\x10\n" +
	"\x03key\x18\x01 \x01(\fR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\fR\x05value\x12\x1c\n" +
	"\toperation\x18\x03 \x01(\x05R\toperation\x12\x1c\n" +
	"\ttimestamp\x18\x04 \x01(\x03R\ttimestamp\"C\n" +
	"\rSnapshotBatch\x122\n" +
	"\tsnapshots\x18\x01 \x03(\v2\x14.IncrementalSnapshotR\tsnapshotsB\n" +
	"Z\b../pb;pbb\x06proto3"

var (
	file_snapshot_proto_rawDescOnce sync.Once
	file_snapshot_proto_rawDescData []byte
)

func file_snapshot_proto_rawDescGZIP() []byte {
	file_snapshot_proto_rawDescOnce.Do(func() {
		file_snapshot_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_snapshot_proto_rawDesc), len(file_snapshot_proto_rawDesc)))
	})
	return file_snapshot_proto_rawDescData
}

var file_snapshot_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_snapshot_proto_goTypes = []any{
	(*IncrementalSnapshot)(nil), // 0: IncrementalSnapshot
	(*SnapshotBatch)(nil),       // 1: SnapshotBatch
}
var file_snapshot_proto_depIdxs = []int32{
	0, // 0: SnapshotBatch.snapshots:type_name -> IncrementalSnapshot
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_snapshot_proto_init() }
func file_snapshot_proto_init() {
	if File_snapshot_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_snapshot_proto_rawDesc), len(file_snapshot_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_snapshot_proto_goTypes,
		DependencyIndexes: file_snapshot_proto_depIdxs,
		MessageInfos:      file_snapshot_proto_msgTypes,
	}.Build()
	File_snapshot_proto = out.File
	file_snapshot_proto_goTypes = nil
	file_snapshot_proto_depIdxs = nil
}
